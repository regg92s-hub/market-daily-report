name: Daily Market Report

on:
  schedule:
    - cron: '50 17 * * *'  # 19:50 Oslo (sommer, UTC+2)
    - cron: '50 18 * * *'  # 19:50 Oslo (vinter, UTC+1)
  workflow_dispatch:
    inputs:
      force:
        description: "Force full run (ignorer tidsvindu i generator)"
        required: false
        default: "false"

permissions:
  contents: write

concurrency:
  group: market-daily-report
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install base deps
        shell: bash
        run: |
          set -e
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      - name: Run generator
        env:
          MPLBACKEND: Agg
          FRED_API_KEY: ${{ secrets.FRED_API_KEY }}
          FORCE_RUN: ${{ github.event.inputs.force }}
        run: |
          set -e
          if [ -f scripts/ggenerate_report.py ]; then
            python scripts/generate_report.py
          else
            echo "::error::scripts/generate_report.py mangler"; exit 2
          fi

      - name: Install extra deps (crypto/news)
        shell: bash
        run: |
          set -e
          python -m pip install --upgrade pip
          pip install yfinance beautifulsoup4 feedparser requests

      - name: Add BTC and ETH + compact PNGs
        if: ${{ hashFiles('scripts/crypto_and_compacts.py') != '' }}
        env:
          MPLBACKEND: Agg
        run: |
          set -e
          python scripts/crypto_and_compacts.py

      - name: Fetch NFTRH and Northstar (last 3 days)
        if: ${{ hashFiles('scripts/fetch_nftrh_northstar.py') != '' }}
        run: |
          set -e
          python scripts/fetch_nftrh_northstar.py

      - name: Sanity check: index.json is JSON (not HTML)
        id: sanity
        shell: bash
        run: |
          set -e
          if [ ! -f docs/index.json ]; then
            echo "::warning::docs/index.json mangler"
            echo "has_json=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          # Avvis åpenbart HTML
          if head -c 200 docs/index.json | tr -d '\r' | grep -qiE '^<!doctype|^<html'; then
            echo "::warning::docs/index.json inneholder HTML – feil filinnhold skrevet av generator"
            echo "has_json=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          python -c "import json; json.load(open('docs/index.json','r',encoding='utf-8'))"
          echo "has_json=true" >> "$GITHUB_OUTPUT"

      - name: Postprocess -> report.json / report.md / report_table.html
        if: ${{ steps.sanity.outputs.has_json == 'true' && hashFiles('scripts/postprocess_report.py') != '' }}
        env:
          POSTPROC_SOFT_FAIL: "false"
          PAGES_BRANCH: "gh-pages"
        run: |
          set -e
          python scripts/postprocess_report.py

      - name: List generated files
        shell: bash
        run: |
          echo "Top-level docs files:"
          ls -l docs || true
          echo
          echo "Charts:"
          ls -1 docs/charts/*.png 2>/dev/null || true

      - name: Upload artifacts (logs + data)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: generator-logs
          path: |
            docs/run_log.txt
            docs/index.json
            docs/index.html
            docs/filelist.json
            docs/news/news.json
            docs/report.json
            docs/report.md
            docs/report_table.html

      - name: Sanity check before deploy
        shell: bash
        run: |
          set -e
          COUNT=$(ls -1 docs/charts/*.png 2>/dev/null | wc -l | tr -d ' ')
          echo "charts count: ${COUNT:-0}"
          if [ "${COUNT:-0}" -lt 10 ]; then
            echo "::error::For få grafer; avbryter deploy for å beskytte siden"
            exit 1
          fi

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          publish_branch: gh-pages
          user_name: github-actions[bot]
          user_email: 41898282+github-actions[bot]@users.noreply.github.com

      - name: Smoke test mirrors
        if: ${{ always() }}
        shell: bash
        run: |
          set -e
          PBASE="https://regg92s-hub.github.io/market-daily-report"
          RBASE="https://raw.githubusercontent.com/regg92s-hub/market-daily-report/gh-pages"
          JBASE="https://cdn.jsdelivr.net/gh/regg92s-hub/market-daily-report@gh-pages"
          for B in "$RBASE" "$JBASE" "$PBASE"; do
            echo "Testing $B ..."
            for f in index.json filelist.json news/news.json; do
              if curl -sSfL "$B/$f?t=${GITHUB_RUN_ID}" >/dev/null; then
                echo "OK $B/$f"
              else
                echo "MISS $B/$f"
              fi
            done
          done
