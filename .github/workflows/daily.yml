name: Daily Market Report

on:
  schedule:
    - cron: '50 17 * * *'  # 19:50 Oslo (sommer, UTC+2)
    - cron: '50 18 * * *'  # 19:50 Oslo (vinter, UTC+1)
  workflow_dispatch:
    inputs:
      force:
        description: 'Force full run (ignorer tidsvindu i generator)'
        required: false
        default: 'false'

permissions:
  contents: write

concurrency:
  group: market-daily-report
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install base deps
        shell: bash
        run: |
          set -e
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          # safe uansett (brukes i scripts/)
          pip install yfinance beautifulsoup4 feedparser requests pandas matplotlib

      - name: Run generator
        env:
          MPLBACKEND: Agg
          FRED_API_KEY: ${{ secrets.FRED_API_KEY }}
          FORCE_RUN: ${{ github.event.inputs.force }}
        shell: bash
        run: |
          set -e
          if [ -f scripts/generate_report.py ]; then
            python scripts/generate_report.py
          else
            echo "::error::scripts/generate_report.py mangler"; exit 2
          fi

      - name: Add BTC/ETH + compact PNGs (optional)
        if: ${{ hashFiles('scripts/crypto_and_compacts.py') != '' }}
        env:
          MPLBACKEND: Agg
        shell: bash
        run: python scripts/crypto_and_compacts.py

      - name: Fetch NFTRH & Northstar (optional)
        if: ${{ hashFiles('scripts/fetch_nftrh_northstar.py') != '' }}
        shell: bash
        run: python scripts/fetch_nftrh_northstar.py

      - name: Postprocess -> report.json / report.md / report_table.html
        env:
          POSTPROC_SOFT_FAIL: 'false'
          PAGES_BRANCH: 'gh-pages'
        shell: bash
        run: python scripts/postprocess_report.py

      - name: Export ChatGPT feed
        shell: bash
        run: python scripts/export_for_chatgpt.py

      - name: List generated files
        shell: bash
        run: |
          echo "Top-level docs files:"; ls -l docs || true
          echo; echo "Charts:"; ls -1 docs/charts/*.png 2>/dev/null || true

      - name: Upload artifacts (logs + data)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: generator-logs
          path: |
            docs/run_log.txt
            docs/index.json
            docs/index.html
            docs/filelist.json
            docs/news/news.json
            docs/report.json
            docs/report.md
            docs/report_table.html
            docs/chatgpt_feed.json
            docs/charts/**

      - name: Sanity check before deploy
        shell: bash
        run: |
          set -e
          COUNT=$(ls -1 docs/charts/*.png 2>/dev/null | wc -l | tr -d ' ')
          echo "charts count: ${COUNT:-0}"
          if [ "${COUNT:-0}" -lt 10 ]; then
            echo "::error::For få grafer; avbryter deploy for å beskytte siden"
            exit 1
          fi
          # Rask JSON-validering (ikke gate videre dersom småfeil)
          for f in docs/index.json docs/filelist.json docs/news/news.json docs/chatgpt_feed.json; do
            if [ -f "$f" ]; then
              python -c "import json,sys; json.load(open(sys.argv[1],'r',encoding='utf-8'))" "$f" \
                && echo "OK JSON $f" \
                || echo "::warning::$f JSON-problem"
            else
              echo "::warning::mangler $f"
            fi
          done

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          publish_branch: gh-pages
          user_name: github-actions[bot]
          user_email: 41898282+github-actions[bot]@users.noreply.github.com

      - name: Smoke test mirrors (index/filelist/news/chatgpt_feed)
        if: ${{ always() }}
        shell: bash
        env:
          RUNID: ${{ github.run_id }}
        run: |
          set -e
          PBASE="https://regg92s-hub.github.io/market-daily-report"
          RBASE="https://raw.githubusercontent.com/regg92s-hub/market-daily-report/gh-pages"
          JBASE="https://cdn.jsdelivr.net/gh/regg92s-hub/market-daily-report@gh-pages"
          FILES="index.json filelist.json news/news.json chatgpt_feed.json"
          for B in "$RBASE" "$JBASE" "$PBASE"; do
            echo "Testing $B ..."
            for f in $FILES; do
              if curl -sSfL "$B/$f?t=${RUNID}" >/dev/null; then
                echo "OK $B/$f"
              else
                echo "::warning::MISS $B/$f"
              fi
            done
          done

      - name: Smoke test GitHub Pages readiness
        if: ${{ always() }}
        shell: bash
        env:
          BASE: https://regg92s-hub.github.io/market-daily-report
        run: |
          set -e
          for i in $(seq 1 10); do
            if curl -fsSL "${BASE}/chatgpt_feed.json?t=${GITHUB_RUN_ID}" >/dev/null; then
              echo "Pages ready"; break
            fi
            sleep 3
          done
          echo "index.json (head):"
          curl -fsSL "${BASE}/index.json?t=${GITHUB_RUN_ID}" | head -c 400 || true
          echo
          echo "chatgpt_feed.json (head):"
          curl -fsSL "${BASE}/chatgpt_feed.json?t=${GITHUB_RUN_ID}" | head -c 400 || true
